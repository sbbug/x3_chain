// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meta.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_meta_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_meta_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "meta_data.pb.h"
#include "common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_meta_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_meta_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_meta_2eproto;
namespace Meta {
class Meta;
class MetaDefaultTypeInternal;
extern MetaDefaultTypeInternal _Meta_default_instance_;
}  // namespace Meta
PROTOBUF_NAMESPACE_OPEN
template<> ::Meta::Meta* Arena::CreateMaybeMessage<::Meta::Meta>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Meta {

// ===================================================================

class Meta :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Meta.Meta) */ {
 public:
  Meta();
  virtual ~Meta();

  Meta(const Meta& from);
  Meta(Meta&& from) noexcept
    : Meta() {
    *this = ::std::move(from);
  }

  inline Meta& operator=(const Meta& from) {
    CopyFrom(from);
    return *this;
  }
  inline Meta& operator=(Meta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Meta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Meta* internal_default_instance() {
    return reinterpret_cast<const Meta*>(
               &_Meta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Meta* other);
  friend void swap(Meta& a, Meta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Meta* New() const final {
    return CreateMaybeMessage<Meta>(nullptr);
  }

  Meta* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Meta>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Meta& from);
  void MergeFrom(const Meta& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Meta* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Meta.Meta";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_meta_2eproto);
    return ::descriptor_table_meta_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CommonProto.Image img_frame = 4;
  bool has_img_frame() const;
  void clear_img_frame();
  static const int kImgFrameFieldNumber = 4;
  const ::CommonProto::Image& img_frame() const;
  ::CommonProto::Image* release_img_frame();
  ::CommonProto::Image* mutable_img_frame();
  void set_allocated_img_frame(::CommonProto::Image* img_frame);

  // optional .MetaData.Data data = 7;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 7;
  const ::MetaData::Data& data() const;
  ::MetaData::Data* release_data();
  ::MetaData::Data* mutable_data();
  void set_allocated_data(::MetaData::Data* data);

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::int32 value);

  // required int32 frame_id = 2;
  bool has_frame_id() const;
  void clear_frame_id();
  static const int kFrameIdFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 frame_id() const;
  void set_frame_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 proto_version = 5 [default = 1];
  bool has_proto_version() const;
  void clear_proto_version();
  static const int kProtoVersionFieldNumber = 5;
  ::PROTOBUF_NAMESPACE_ID::int32 proto_version() const;
  void set_proto_version(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:Meta.Meta)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CommonProto::Image* img_frame_;
  ::MetaData::Data* data_;
  ::PROTOBUF_NAMESPACE_ID::int32 version_;
  ::PROTOBUF_NAMESPACE_ID::int32 frame_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 proto_version_;
  friend struct ::TableStruct_meta_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Meta

// required int32 version = 1;
inline bool Meta::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Meta::clear_version() {
  version_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Meta::version() const {
  // @@protoc_insertion_point(field_get:Meta.Meta.version)
  return version_;
}
inline void Meta::set_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  version_ = value;
  // @@protoc_insertion_point(field_set:Meta.Meta.version)
}

// required int32 frame_id = 2;
inline bool Meta::has_frame_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Meta::clear_frame_id() {
  frame_id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Meta::frame_id() const {
  // @@protoc_insertion_point(field_get:Meta.Meta.frame_id)
  return frame_id_;
}
inline void Meta::set_frame_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  frame_id_ = value;
  // @@protoc_insertion_point(field_set:Meta.Meta.frame_id)
}

// optional .CommonProto.Image img_frame = 4;
inline bool Meta::has_img_frame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::CommonProto::Image& Meta::img_frame() const {
  const ::CommonProto::Image* p = img_frame_;
  // @@protoc_insertion_point(field_get:Meta.Meta.img_frame)
  return p != nullptr ? *p : *reinterpret_cast<const ::CommonProto::Image*>(
      &::CommonProto::_Image_default_instance_);
}
inline ::CommonProto::Image* Meta::release_img_frame() {
  // @@protoc_insertion_point(field_release:Meta.Meta.img_frame)
  _has_bits_[0] &= ~0x00000001u;
  ::CommonProto::Image* temp = img_frame_;
  img_frame_ = nullptr;
  return temp;
}
inline ::CommonProto::Image* Meta::mutable_img_frame() {
  _has_bits_[0] |= 0x00000001u;
  if (img_frame_ == nullptr) {
    auto* p = CreateMaybeMessage<::CommonProto::Image>(GetArenaNoVirtual());
    img_frame_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Meta.Meta.img_frame)
  return img_frame_;
}
inline void Meta::set_allocated_img_frame(::CommonProto::Image* img_frame) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(img_frame_);
  }
  if (img_frame) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      img_frame = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, img_frame, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  img_frame_ = img_frame;
  // @@protoc_insertion_point(field_set_allocated:Meta.Meta.img_frame)
}

// optional int32 proto_version = 5 [default = 1];
inline bool Meta::has_proto_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Meta::clear_proto_version() {
  proto_version_ = 1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Meta::proto_version() const {
  // @@protoc_insertion_point(field_get:Meta.Meta.proto_version)
  return proto_version_;
}
inline void Meta::set_proto_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  proto_version_ = value;
  // @@protoc_insertion_point(field_set:Meta.Meta.proto_version)
}

// optional .MetaData.Data data = 7;
inline bool Meta::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::MetaData::Data& Meta::data() const {
  const ::MetaData::Data* p = data_;
  // @@protoc_insertion_point(field_get:Meta.Meta.data)
  return p != nullptr ? *p : *reinterpret_cast<const ::MetaData::Data*>(
      &::MetaData::_Data_default_instance_);
}
inline ::MetaData::Data* Meta::release_data() {
  // @@protoc_insertion_point(field_release:Meta.Meta.data)
  _has_bits_[0] &= ~0x00000002u;
  ::MetaData::Data* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::MetaData::Data* Meta::mutable_data() {
  _has_bits_[0] |= 0x00000002u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::MetaData::Data>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Meta.Meta.data)
  return data_;
}
inline void Meta::set_allocated_data(::MetaData::Data* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_);
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:Meta.Meta.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Meta

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_meta_2eproto
